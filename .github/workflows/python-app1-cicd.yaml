name: python-app1-cicd
on:
  push:
    paths:
        - src/**
    branches:
        - main

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Shorten the commit id to first 6 characters
        shell: bash
        run: |
          echo "COMMIT_ID=${GITHUB_SHA::6}" >> "$GITHUB_ENV"

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }} 
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: aumthakkar/python-app1:${{ env.COMMIT_ID }}
    
    outputs:
      commit_id: ${{ env.COMMIT_ID }}

  cd:
    needs: ci
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3 # This step clones our argocd synced github repo first before committing to our values.yaml file below

      - name: Update Image tag in argocd monitored charts/python-app1/values-dev.yaml file on github
        shell: bash
        run: |
          echo ${{needs.ci.outputs.commit_id}}
          pip install yq
          yq -Yi '.image.tag = "${{needs.ci.outputs.commit_id}}"' charts/python-app1/values-dev.yaml
      
      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          message: 'Updates charts/python-app1/dev with latest docker image push commit ${{needs.ci.outputs.commit_id}}'

      - name: Install Argocd # To run the argocd app sync <application> argocd CLI 
        shell: bash
        run: |
          curl -ksSL -o argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x argocd
          sudo mv ./argocd /usr/local/bin/argocd

      - name: Argo CD login
        shell: bash
        run: |
          argocd login argocd-server.argocd \
            --insecure  \
            --grpc-web \
            --username admin \
            --password  ${{ secrets.ARGOCD_PASSWORD }}
      
      - name: Ensure github repo and app
        shell: bash
        run: | 
          # Connects argocd to github repo
          repo='https://github.com/aum-thakkar/python-app1.git'      
          argocd repo list | grep -q ${repo} || argocd repo add ${repo}

          # Creates the argocd app
          argocd app get python-app1 || argocd app create python-app1 \
            --dest-namespace dev \
            --dest-server https://kubernetes.default.svc \
            --path charts/python-app1 \
            --repo ${repo} \
            --revision main \
            --sync-policy manual \
            --sync-option CreateNamespace=true \
            --values values-dev.yaml
          
      - name: Argo CD app sync
        shell: bash
        run: |      
          argocd app sync python-app1
          argocd app wait python-app1 --timeout 180

